<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yczx.dao.BidTaskDao">
	<resultMap id="bidTaskMap" type="BidTask">
		<id property="id" column="id" />
		<result property="bidId" column="bid_id" />
		<result property="editorIds" column="editor_ids" />
		<result property="chapterId" column="chapter_id" />
		<result property="draftFileId" column="draft_file_id" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="submiter" column="submiter" />
		<result property="submitTime" column="submit_time" />
		<result property="submitComment" column="submit_comment" />
		<result property="approver" column="approver" />
		<result property="approveTime" column="approve_time" />
		<result property="approveComment" column="approve_comment" />
		<result property="approveStatus" column="approve_status" />
		<result property="checkedOut" column="checked_out" />
		<result property="checker" column="checker" />
		<result property="checkTime" column="check_time" />
	</resultMap>

	<select id="selectBidTasks" resultMap="bidTaskMap">
		select *
		from
		bid_task
		order
		by id asc
	</select>

	<select id="selectBidTasksByBid" resultMap="bidTaskMap">
		select t.*
		from
		bid_task t, template_chapter c
		where t.bid_id=#{bidId} and t.chapter_id=c.id
		order by c.sort  asc
	</select>

	<select id="selectBidTasksByBidAsEditor" resultMap="bidTaskMap">
		select *
		from
		bid_task
		where bid_id=#{bidId} and #{userId} in (editor_ids)
		order by id desc
	</select>
	<select id="selectBidTaskById" resultMap="bidTaskMap">
		select *
		from
		bid_task
		where id = #{id}
	</select>

	<select id="selectBidTasksByPageParam" resultMap="bidTaskMap">
		select * from bid_task where valid='1' and #{userId} in (editor_ids) 
		<if test='search != null'>
			and (name like "%"#{search}"%" or description like "%"#{search}"%" or
			file_name like "%"#{search}"%")
		</if>
		order by id desc limit #{min}, #{pageSize}
	</select>

	<select id="getBidTaskTotalCount" resultType="int">
		select count(id) from bid_task where valid='1' and #{userId} in (editor_ids)
		<if test='search != null'>
			and (name like "%"#{search}"%" or description like "%"#{search}"%" or
			file_name like "%"#{search}"%")
		</if>
	</select>
	
	<select id="getBidTaskDoneCount" resultType="int">
		select count(id) from bid_task where #{userId} in (editor_ids) and approve_status='通过'
	</select>
	
	<select id="getBidTaskUndergoingCount" resultType="int">
		select count(id) from bid_task where  #{userId} in (editor_ids) and (approve_status is null or approve_status&lt;&gt;'通过')
	</select>
	
	<select id="getBidTaskDelayedCount" resultType="int">
		select count(id) from bid_task where #{userId} in (editor_ids) and approve_status&lt;&gt;'通过' and  end_time &lt; now()
	</select>
	
	<insert id="insertBidTask" parameterType="BidTask">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
		INSERT INTO
		bid_task
		(bid_id, editor_ids, chapter_id, draft_file_id, start_time,
		end_time, submit_time, submit_comment, approver, approve_time,
		approve_comment, approve_status, checked_out)
		VALUES
		(#{bidId}, #{editorIds}, #{chapterId}, #{draftFileId}, #{startTime},
		#{endTime}, #{submitTime}, #{submitComment}, #{approver}, #{approveTime},
		#{approveComment}, #{approveStatus}, #{checkedOut})
	</insert>

	<update id="updateBidTask" parameterType="BidTask">
		UPDATE
		bid_task
		SET
		bidId=#{bid_id},
		editorIds=#{editor_ids},
		chapterId=#{chapter_id},
		draftFileId=#{draft_file_id},
		startTime=#{start_time},

		endTime=#{end_time} ,
		submitTime=#{submit_time},
		submitComment=#{submit_comment},
		approver=#{approver},
		approveTime=#{approve_time},

		approveComment=#{approve_comment},
		approveStatus=#{approve_status},
		checkedOut=#{checked_out}
		WHERE
		id = #{id}
	</update>

	<delete id="deleteBidTaskByBidId" parameterType="java.lang.Long">
		delete from bid_task
		where
		bid_id=#{bidId}
	</delete>
	
	<update id="updateBidTaskByAdmin" parameterType="BidTask">
		UPDATE
		bid_task
		SET
		editor_ids=#{editorIds},
		start_time=#{startTime},
		end_time=#{endTime} 
		WHERE
		id = #{id}
	</update>
	
	<update id="updateTaskCheckin" parameterType="BidTask">
		UPDATE
		bid_task
		SET
		draft_file_id=#{draftFileId},
		checked_out=0, 
		check_time=now(),
		checker=#{checker}
		WHERE
		id = #{id}
	</update>
	
	<update id="updateTaskCheckout" parameterType="BidTask">
		UPDATE
		bid_task
		SET
		checked_out=1,
		check_time=now(),
		checker=#{checker}
		WHERE
		id = #{id}
	</update>
	
	<update id="updateTaskSubmit" parameterType="BidTask">
		UPDATE
		bid_task
		SET
		submiter=#{submiter},
		submit_time=now(),
		submit_comment=#{submitComment},
		checked_out=1
		WHERE
		id = #{id}
	</update>
	
	<update id="updateTaskApprove" parameterType="BidTask">
		UPDATE
		bid_task
		SET
		approver=#{approver},
		approve_time=now(),
		approve_comment=#{approveComment},
		approve_status=#{approveStatus}
		WHERE
		id = #{id}
	</update>
	
	
</mapper>
