<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yczx.dao.MaterialDao">
	<resultMap id="materialMap" type="Material">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="type" column="type" />
		<result property="description" column="description" />
		<result property="createTime" column="create_time" />
		<result property="fileId" column="file_id" />
		<result property="valid" column="valid" />
	</resultMap>


	<select id="selectMaterials" resultMap="materialMap">
		select *
		from
		material
		order by id desc
	</select>

	<select id="selectMaterialById" resultMap="materialMap">
		select *
		from
		material
		where id = #{id}
	</select>

	<select id="selectMaterialsByPageParam" resultMap="materialMap">
		select * from material where valid='1'
		<if test='search != null'>
			and (name like "%"#{search}"%" or description like "%"#{search}"%")
		</if>
		order by id desc limit #{min}, #{pageSize}
	</select>

	<select id="getMaterialTotalCount" resultType="int">
		select count(id) from material where valid='1'
		<if test='search != null'>
			and (name like "%"#{search}"%" or description like "%"#{search}"%")
		</if>
	</select>

	<insert id="insertMaterial" parameterType="Material">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
		INSERT INTO
		material
		(name, type, create_time, description, file_id, valid)
		VALUES
		(#{name}, #{type}, now(), #{description}, #{fileId}, 1)
	</insert>

	<update id="updateMaterial" parameterType="Material">
		UPDATE
		material
		SET
		name=#{name},
		type=#{type},
		description=#{description},
		file_id=#{fileId},
		create_time=now()
		WHERE
		id = #{id}
	</update>

	<delete id="deleteMaterial" parameterType="java.lang.Long">
		update material
		SET
		valid=0
		WHERE
		id =#{id}
	</delete>
</mapper>
